language: php

php:
  - 5.4
  - 5.6
  - hhvm-nightly  
  
matrix:
    include:
        - php: 5.3
          env: EXTERNAL=false ADAPTER=mysqli
        - php: 5.5
          env: EXTERNAL=true ADAPTER=mysqli
        - php: 5.5
          env: EXTERNAL=false ADAPTER=pdo_mysql          
    allow_failures:
        - php: hhvm-nightly

env:
    global:
        - DB=mysql
        - EXTERNAL=false
    matrix:
        - ADAPTER=mysqli
        - ADAPTER=pdo_mysql

before_script:
  - if [[ $HHVM == false ]] ; then pecl install imagick ; fi 
  - mkdir -p tests/tmp/cache 
  - if [[ "$DB" == "mysql" ]]; then mysql -e "DROP DATABASE IF EXISTS phpunit_soluble_test_db;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then mysql -e "create database phpunit_soluble_test_db;" -uroot; fi
  - if [[ "$DB" == "mysql" ]]; then zcat tests/data/mysql/schema.sql.gz | mysql -uroot phpunit_soluble_test_db; fi
  - if [[ "$DB" == "mysql" ]]; then zcat tests/data/mysql/data.sql.gz | mysql -uroot phpunit_soluble_test_db; fi
  - sh -c "pwd"
  - sh -c "which zcat"
  - sh -c "which php"
  - mysql -e "show databases;" -uroot
  - mysql -e "connect phpunit_soluble_test_db; show tables;" -uroot
  - composer install --no-interaction --prefer-dist --dev
  - mkdir build
  - mkdir -p build/logs
  #- sudo apt-get install jpegoptim libjpeg-progs optipng
  # node deps
  #- npm install uglify-js@1 && mkdir -p vendor/uglifyjs && mv node_modules vendor/uglifyjs
  #- npm install
  #- export UGLIFYJS_BIN=vendor/uglifyjs/node_modules/uglify-js/bin/uglifyjs
  #- export AUTOPREFIXER_BIN=node_modules/autoprefixer/autoprefixer  
  # java deps
  #- mkdir -p vendor/java
  #- wget http://dl.google.com/closure-compiler/compiler-latest.zip && unzip compiler-latest.zip -d vendor/java/compiler
  #- export CLOSURE_JAR=vendor/java/compiler/compiler.jar
  #- wget http://closure-stylesheets.googlecode.com/files/closure-stylesheets-20111230.jar && mv closure-stylesheets-20111230.jar vendor/java
  #- export GSS_JAR=vendor/java/closure-stylesheets-20111230.jar
  # TODO find the new URL for the cssembed JAR
  #- wget https://github.com/downloads/nzakas/cssembed/cssembed-0.4.5.jar && mv cssembed-0.4.5.jar vendor/java
  #- export CSSEMBED_JAR=vendor/java/cssembed-0.4.5.jar
  #- wget http://yui.zenfs.com/releases/yuicompressor/yuicompressor-2.4.7.zip && unzip yuicompressor-2.4.7.zip -d vendor/java
  #- export YUI_COMPRESSOR_JAR=vendor/java/yuicompressor-2.4.7/build/yuicompressor-2.4.7.jar
  #- wget -q http://static.jonof.id.au/dl/kenutils/pngout-20130221-linux.tar.gz && tar -xzf pngout-20130221-linux.tar.gz && mv pngout-20130221-linux vendor
  #- export PNGOUT_BIN=vendor/pngout-20130221-linux/x86_64/pngout  
  
script: 
  #- php -d error_log=`pwd`/log.txt -d display_errors=On ./vendor/phpunit/phpunit/phpunit -v --debug tests/config/phpunit.$ADAPTER.travis.xml   
  - phpunit -v --configuration tests/config/phpunit.$ADAPTER.travis.xml 
  # - ./vendor/squizlabs/php_codesniffer/scripts/phpcs --standard=PSR2 ./src/

  #- ./bin/phpcs --standard=PSR2 ./src --report=full --report-file=./tests/build/phpcs_report.txt
  #- php tests/coverage-checker.php "$HOME/belgattitude/solublecomponents/tests/build/logs/clover.xml" 50

after_script:
  - if [[ $HHVM == false ]] ; then php -r 'echo readfile(ini_get("error_log")) . "\n";'; fi
  - cat log.txt
  #- cat $TRAVIS_BUILD_DIR/config/config.ini.php  
  - ls build/logs  
  - if [[ $EXTERNAL == true ]]; then wget https://scrutinizer-ci.com/ocular.phar; fi
  - if [[ $EXTERNAL == true ]]; then php ocular.phar code-coverage:upload --format=php-clover build/logs/clover.xml; fi
  - sh -c "which java"
  - sh -c "java -version"
  - ./bin/coveralls -c=./coveralls.yml -v 
  #- php -r 'echo readfile(ini_get("error_log"));'
  #- php --version
  #- php --info
  #- php -d error_log=`pwd`/log.txt -d display_errors=On "./vendor/phpunit/phpunit/phpunit" -v --debug tests/config/phpunit.mysqli.travis.xml 
  #- cat log.txt
  

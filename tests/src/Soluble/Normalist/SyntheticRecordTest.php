<?php

namespace Soluble\Normalist;
use Soluble\Db\Metadata\Source;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-04 at 09:01:01.
 */
class SyntheticRecordTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var SyntheticTable
	 */
	protected $table;
	
	/**
	 * @var SyntheticRecord
	 */
	protected $record;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$adapter = \SolubleTestFactories::getDbAdapter();
		$cache   = \SolubleTestFactories::getCacheStorage();
		$metadata = new Source\MysqlISMetadata($adapter);
		$metadata->setCache($cache);
		
		$this->table = new SyntheticTable($adapter);
		$this->table->setMetadata($metadata);
		
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}
	
	/**
	 * @covers Soluble\Normalist\SyntheticRecord::__get
	 */
	function testMagicProperties() {
		$data = $this->createMediaRecordData('phpunit_testMagicProperties');
		$new_record = $this->table->insertOnDuplicateKey('media', $data, array('legacy_mapping'));
		$this->assertEquals($new_record['media_id'], $new_record->media_id);
		
	}	

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::toArray
	 * @todo   Implement testToArray().
	 */
	public function testToArray() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::save
	 * @todo   Implement testSave().
	 */
	public function testSave() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::delete
	 * @todo   Implement testDelete().
	 */
	public function testDelete() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::get
	 * @todo   Implement testGet().
	 */
	public function testGet() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::offsetExists
	 * @todo   Implement testOffsetExists().
	 */
	public function testOffsetExists() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::offsetGet
	 * @todo   Implement testOffsetGet().
	 */
	public function testOffsetGet() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::offsetSet
	 * @todo   Implement testOffsetSet().
	 */
	public function testOffsetSet() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::offsetUnset
	 * @todo   Implement testOffsetUnset().
	 */
	public function testOffsetUnset() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::getParent
	 */
	public function testGetParent() {

		$data = $this->createMediaRecordData('phpunit_testGetParent');
		
		$record = $this->table->insertOnDuplicateKey('media', $data, array('legacy_mapping'));
		
		$this->assertTrue($this->table->exists('media', $record['media_id']));		
		$record->save();
		
		$related = $record->getParent('media_container');
		$this->assertEquals($data['container_id'], $related['container_id']);			
		
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::__set
	 * @todo   Implement test__set().
	 */
	public function test__set() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Soluble\Normalist\SyntheticRecord::__get
	 * @todo   Implement test__get().
	 */
	public function test__get() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
				'This test has not been implemented yet.'
		);
	}
	
	/**
	 * Return a media record suitable for database insertion
	 * @return array
	 */
	protected function createMediaRecordData($legacy_mapping=null) {
		$this->table->insertOnDuplicateKey('media_container', array('reference' => 'PRODUCT_MEDIAS'));
		
		$container_id = $this->table->findOneBy('media_container', array('reference' => 'PRODUCT_MEDIAS'))->get('container_id');
		
		$data  = array(
			'filename'  => 'phpunit_test.pdf',
			'filemtime' => 111000,
			'filesize'  => 5000,
			'container_id' => $container_id,
			'legacy_mapping' => $legacy_mapping
		);
		return $data;
	}		

}

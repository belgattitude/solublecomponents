<?php

namespace Soluble\Media\Converter;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-06 at 12:10:04.
 */
class ImageConverterTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var ImageConverter
     */
    protected $converter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->converter = new ImageConverter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }
    
    public function testConstructWithParams() 
    {
        
        $params = array('backend' => 'randomstring');
        $converter = new ImageConverter($params=array('backend' => 'gd'));
        
        $this->assertInstanceOf('\Soluble\Media\Converter\ImageConverter', $converter);
        
    }
    
    public function testConstructThrowsUnsupportedBackendException()
    {
        $this->setExpectedException('Soluble\Media\Converter\Exception\UnsupportedBackendException');
        $params = array('backend' => 'randomstring');
        $converter = new ImageConverter($params);
    }    

    public function testSetBackendThrowsUnsupportedBackendException()
    {
        $this->setExpectedException('Soluble\Media\Converter\Exception\UnsupportedBackendException');
        $this->converter->setBackend('not_a_backend');

    }
    
    public function testSetBackendThrowsInvalidArgumentException()
    {
        $this->setExpectedException('Soluble\Media\Converter\Exception\InvalidArgumentException');
        $this->converter->setBackend(array('cool'));

    }
    
    
    
    public function testSetBackend()
    {
        $ret = $this->converter->setBackend('gd');        
        $this->assertInstanceOf('\Soluble\Media\Converter\ImageConverter', $ret);
    }

    /**
     * @covers Soluble\Media\Converter\ImageConverter::getThumbnail
     * @todo   Implement testGetThumbnail().
     */
    public function testGetThumbnail()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Soluble\Media\Converter\ImageConverter::setCache
     * @todo   Implement testSetCache().
     */
    public function testSetCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Soluble\Media\Converter\ImageConverter::unsetCache
     * @todo   Implement testUnsetCache().
     */
    public function testUnsetCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

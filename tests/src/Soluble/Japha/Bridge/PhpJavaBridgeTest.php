<?php

namespace Soluble\Japha\Bridge;

use Soluble\Japha\Bridge\Java;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-04 at 16:47:42.
 */
class PhpJavaBridgeTest extends \PHPUnit_Framework_TestCase
{


    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        \SolubleTestFactories::startJavaBridgeServer();
        
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    /**
     * 
     */
    public function testIncludeBridge()
    {
        $bridge_address = "localhost:8083";
        PhpJavaBridge::includeBridge($bridge_address);
        
        $system = PhpJavaBridge::java('java.lang.System');
        $this->assertInstanceOf('Soluble\Japha\Bridge\Pjb621\JavaClass', $system);
        
        /* @var $properties \Soluble\Japha\Bridge\Pjb621\InternalJava */
        $properties = $system->getProperties();
        $this->assertInstanceOf('Soluble\Japha\Bridge\Pjb621\InternalJava', $properties);

        $this->assertInternalType('string', $properties->__cast('string'));
        $this->assertInternalType('string', $properties->__toString());
        
        foreach($properties as $key => $value) {
            $this->assertInternalType('string', $key);
            $this->assertInstanceOf('Soluble\Japha\Bridge\Pjb621\InternalJava', $value);
        }
        
        $iterator =  $properties->getIterator();
        $this->assertInstanceOf('Soluble\Japha\Bridge\Pjb621\ObjectIterator', $iterator);
        $this->assertInstanceOf('Iterator', $iterator);
        
        
        $vm_name = $properties->get('java.vm.name');
        $this->assertInstanceOf('Soluble\Japha\Bridge\Pjb621\InternalJava', $vm_name);
        $this->assertContains('Java', $vm_name->__toString());
        $this->assertContains('Java', (string) $vm_name);
        
        
    }

}

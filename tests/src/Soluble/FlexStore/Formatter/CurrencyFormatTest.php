<?php

namespace Soluble\FlexStore\Formatter;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-05 at 13:20:15.
 */
class CurrencyFormatTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var CurrencyFormat
     */
    protected $currencyFormatter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->currencyFormatter = new CurrencyFormatter;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }

    public function testFormat()
    {
        $moneyFormatter = new CurrencyFormatter();
        $moneyFormatter->setCurrencyCode('EUR');
        $moneyFormatter->setLocale('fr_FR');
        $this->assertEquals('10,24 €', $moneyFormatter->format(10.239));
        $moneyFormatter->setLocale('en_US');
        $this->assertEquals('€10.24', $moneyFormatter->format(10.239));
        $moneyFormatter->setLocale('en_GB');    
        $this->assertEquals('€10.24', $moneyFormatter->format(10.239));
        $moneyFormatter->setCurrencyCode('CAD');
        $this->assertEquals('CA$10.24', $moneyFormatter->format(10.239));
        $moneyFormatter->setCurrencyCode('CNY');
        $this->assertEquals('CN¥10.24', $moneyFormatter->format(10.239));
        $moneyFormatter->setCurrencyCode('GBP');
        $this->assertEquals('£10.24', $moneyFormatter->format(10.239));
        $this->assertEquals('-£10.24', $moneyFormatter->format(-10.239));
        $moneyFormatter->setLocale('fr_FR');
        $moneyFormatter->setCurrencyCode('EUR');
        $this->assertEquals('-10,24 €', $moneyFormatter->format(-10.239));
        $moneyFormatter->setLocale('en_GB');
        $moneyFormatter->setCurrencyCode('GBP');
        $this->assertEquals('-£10.24', $moneyFormatter->format(-10.239));
        
        $parsed = $moneyFormatter->parse('-£10.24');
        $this->assertInternalType('array', $parsed);
        $this->assertEquals('GBP', $parsed['currency']);
        $this->assertEquals(-10.24, $parsed['value']);
        

    }
}

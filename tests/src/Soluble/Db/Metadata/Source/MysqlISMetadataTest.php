<?php

namespace Soluble\Db\Metadata\Source;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-10-03 at 12:26:39.
 */
class MysqlISMetadataTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var MysqlISMetadata
     */
    protected $metadata;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $adapter = \SolubleTestFactories::getDbAdapter();

        //var_dump($adapter->getDriver()->getConnection());
        //var_dump($adapter->getCurrentSchema());

        $cache   = \SolubleTestFactories::getCacheStorage();

        $this->metadata = new MysqlISMetadata($adapter);
        //$this->metadata->setCache($cache);
        $tables = $this->metadata->getTables();

        //var_dump($tables);

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testGetUniqueKeys()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testGetPrimaryKey()
    {
        $primary = $this->metadata->getPrimaryKey('user');
        $this->assertInternalType('string', $primary);
        $this->assertEquals('user_id', $primary);
    }

    public function testGetPrimaryKeyThrowsTableNotFoundException()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\TableNotFoundException');
        $primary = $this->metadata->getPrimaryKey('table_not_found');
    }    
    
    
    public function testgetPrimaryKeyThrowsInvalidArgumentException()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\InvalidArgumentException');
        $primary = $this->metadata->getPrimaryKey(array('cool'));
        
    }

     public function testgetPrimaryKeyThrowsInvalidArgumentException2()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\InvalidArgumentException');
        $primary = $this->metadata->getPrimaryKey('product', $schema=array('cool'));
        
    }   
    
    public function testgetPrimaryKeysThrowsInvalidArgumentException()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\InvalidArgumentException');
        $primary = $this->metadata->getPrimaryKeys(array('cool'));
        
    }
    
    
    
    public function testGetPrimaryKeyThrowsNoPrimaryKeyException()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\NoPrimaryKeyException');
        $primary = $this->metadata->getPrimaryKey('test_table_without_pk');
    }    
    
    public function testGetPrimaryKeys()
    {
        $keys = $this->metadata->getPrimaryKeys('user');
        $this->assertInternalType('array', $keys);

    }

    public function testGetIndexesInformation()
    {
        $indexes = $this->metadata->getIndexesInformation('product');
        $this->assertInternalType('array', $indexes);
        $this->assertArrayHasKey('unique_slug_idx', $indexes);

    }

    public function testGetColumnsInformation()
    {
        $infos = $this->metadata->getColumnsInformation('product');
        $this->assertInternalType('array', $infos);
        $this->assertArrayHasKey('product_id', $infos);

    }
    
    public function testGetColumns()
    {
        $infos = $this->metadata->getColumns('product');
        $this->assertInternalType('array', $infos);
        $this->assertArrayNotHasKey('product_id', $infos);
        $this->assertTrue(in_array('product_id', $infos));

    }
    
    public function testGetRelationsThrowsInvalidArgumentException()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\InvalidArgumentException');
        $relations = $this->metadata->getRelations(array('cool'));
        
    }

    public function testGetRelationsThrowsInvalidArgumentException2()
    {
        $this->setExpectedException('Soluble\Db\Metadata\Exception\InvalidArgumentException');
        $relations = $this->metadata->getRelations('product', array('cool'));
        
    }
    
    
    public function testGetRelations()
    {
        $relations = $this->metadata->getRelations('product');

        $this->assertInternalType('array', $relations);
        $this->assertArrayHasKey('brand_id', $relations);
        $this->assertArrayHasKey('column_name', $relations['unit_id']);
        $this->assertArrayHasKey('table_schema', $relations['unit_id']);
        $this->assertArrayHasKey('table_name', $relations['unit_id']);
        $this->assertArrayHasKey('constraint_name', $relations['unit_id']);
    }


    public function testGetTablesInformation()
    {
        $infos = $this->metadata->getTablesInformation();
        $this->assertInternalType('array', $infos);
        $this->assertArrayHasKey('wp_users', $infos);
    }
    
    
    public function testGetTableInformation()
    {
        $infos = $this->metadata->getTableInformation('user');
        $this->assertInternalType('array', $infos);
        $this->assertArrayHasKey('TABLE_NAME', $infos);
    }

    
    /**
     * @covers Soluble\Db\Metadata\Source\MysqlISMetadata::setCache
     * @todo   Implement testSetCache().
     */
    public function testSetCache()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
